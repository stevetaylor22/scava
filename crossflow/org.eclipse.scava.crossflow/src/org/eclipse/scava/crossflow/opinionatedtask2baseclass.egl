[%import "task2baseclass.egl";%]
package [%=package%];

import org.eclipse.scava.crossflow.runtime.FailedJob;

public abstract class Opinionated[%=t.name%]Base extends [%=t.name%]Base {
	
	[%for (s in t.input) { %]
[%=s.createStartOfConsumeMethod()%]
		[%if(not t.multipleOutputs and t.output.size==1) {%]
				[%=t.output.first.type.name%] result = null;
				
				if(acceptInput([%=s.type.name.ftlc()%]))
					result = consume[%=s.name%]([%=s.type.name.ftlc()%]);
				else 	
					workflow.get[%=s.name%]().send([%=s.type.name.ftlc()%],this.getClass().getName());
				
				if(result != null){
					result.setTransactional(false);
					sendTo[%=t.output.first.name%](result);
				}
		[%}else {%]
				if(acceptInput([%=s.type.name.ftlc()%]))
					consume[%=s.name%]([%=s.type.name.ftlc()%]);
				else 
					workflow.get[%=s.name%]().send([%=s.type.name.ftlc()%],this.getClass().getName());				
[%=s.sendConfirmationMessage()%]
		[%}%]
[%=s.createEndOfConsumeMethod()%]
	[%}%]

[%for (s in t.input) { %]
/*
* Return whether this instance of Opinionated[%=t.name%] will accept the task 'input' for processing.
*/	
public abstract boolean acceptInput([%=s.type.name%] input);	
[%}%]

}